//
// -- Start editing -- //
//

@import "./flex-mixin";

$outer-margin: 25px;
// Set the number of columns you want to use on your layout.
$flexboxgrid-grid-columns: 12 !default;
// Set the gutter between columns.
$flexboxgrid-gutter-width: 18px !default;
// Set a margin for the container sides.
$flexboxgrid-outer-margin: $outer-margin !default;
// Create or remove breakpoints for your project
// Syntax:
// name SIZErem,
$flexboxgrid-breakpoints: sm 1024px 974px 18px, md 1280px 1230px 18px,
  lg 1440px 1390px 18px, xl 1920px 1870px 18px !default;
$flexboxgrid-max-width: 1920px !default;

//
// -- Stop editing -- //
//

$gutter-compensation: $flexboxgrid-gutter-width * 0.5 * -1;
$half-gutter-width: $flexboxgrid-gutter-width * 0.5;

.wrapper {
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  margin: 0 auto;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $flexboxgrid-outer-margin;
  padding-left: $flexboxgrid-outer-margin;
}

.row {
  box-sizing: border-box;
  @include flexbox();
  @include flex(0, 1, auto);
  @include flex-direction(row);
  @include flex-wrap(wrap);
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

.flex-col {
  @include flexbox();
  @include flex-direction(column);
}
.flex-row {
  @include flexbox();
  @include flex-direction(row);
}
.row.reverse {
  @include flex-direction(row-reverse);
}

.col.reverse {
  @include flex-direction(column-reverse);
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;

  // split @include flex(0, 0, auto) into individual props
  @include flex-grow(0);
  @include flex-shrink(0);

  // we leave @include flex-basis(auto) out of common because
  // in some spots we need it and some we dont
  // more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

// $name: xs;
.col {
  @include flexboxgrid-sass-col-common;
  @include flex-basis(auto);
}
@for $i from 1 through $flexboxgrid-grid-columns {
  .col-#{$i} {
    @include flexboxgrid-sass-col-common;
    @include flex-basis(100% / $flexboxgrid-grid-columns * $i);
    max-width: 100% / $flexboxgrid-grid-columns * $i;
  }
}
// Make custom col classes start
.col-0-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 4.16666667%;
  max-width: 4.16666667%;
}
.col-1-1 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 9.166666666%;
  max-width: 9.166666666%;
}
.col-1-2 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 10%;
  max-width: 10%;
}
.col-1-3 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 10.833333333%;
  max-width: 10.833333333%;
}
.col-1-4 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 11.66666666%;
  max-width: 11.66666666%;
}
.col-1-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 12.5%;
  max-width: 12.5%;
}
.col-1-6 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 13.33333333%;
  max-width: 13.33333333%;
}
.col-1-7 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 14.166666666%;
  max-width: 14.166666666%;
}
.col-1-8 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 15%;
  max-width: 15%;
}
.col-1-9 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 15.83333333%;
  max-width: 15.83333333%;
}
.col-2-1 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 17.5%;
  max-width: 17.5%;
}
.col-2-2 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 18.33333333%;
  max-width: 18.33333333%;
}
.col-2-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 20.833333333%;
  max-width: 20.833333333%;
}
.col-3-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 29.166666666%;
  max-width: 29.166666666%;
}
.col-4-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 37.5%;
  max-width: 37.5%;
}
.col-5-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 45.833333333%;
  max-width: 45.833333333%;
}
.col-6-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 54.166666666%;
  max-width: 54.166666666%;
}
.col-7-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 62.5%;
  max-width: 62.5%;
}
.col-8-5 {
  @include flexboxgrid-sass-col-common;
  flex-basis: 70.833333333%;
  max-width: 70.833333333%;
}
// custom col classes end
@for $i from 0 through $flexboxgrid-grid-columns {
  .col-offset-#{$i} {
    @include flexboxgrid-sass-col-common;
    @if $i == 0 {
      margin-left: 0;
    } @else {
      margin-left: 100% / $flexboxgrid-grid-columns * $i;
    }
  }
}
.col {
  @include flex-grow(1);
  @include flex-basis(0);
  max-width: 100%;
}
.start {
  @include justify-content(flex-start);
  text-align: left;
}

.center {
  @include justify-content(center);
  text-align: center;
}

.end {
  @include justify-content(flex-end);
  text-align: right;
}

.top {
  @include align-items(flex-start);
}

.middle {
  @include align-items(center);
}

.bottom {
  @include align-items(flex-end);
}

.around {
  @include justify-content(space-around);
}

.between {
  @include justify-content(space-between);
}

.stretch{
  @include align-items();
}

.wrap{
  @include flex-wrap(wrap);
}

.first {
  order: -1;
}

.last {
  order: 1;
}

@each $breakpoint in $flexboxgrid-breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  @media only screen and (min-width: $size) {
    .container {
      width: $container;
    }

    .col {
      @include flexboxgrid-sass-col-common;
      @include flex-basis(auto);
    }
    @for $i from 1 through $flexboxgrid-grid-columns {
      .col-#{$i} {
        @include flexboxgrid-sass-col-common;
        @include flex-basis(100% / $flexboxgrid-grid-columns * $i);
        max-width: 100% / $flexboxgrid-grid-columns * $i;
      }
    }
    @for $i from 0 through $flexboxgrid-grid-columns {
      .col-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        @if $i == 0 {
          margin-left: 0;
        } @else {
          margin-left: 100% / $flexboxgrid-grid-columns * $i;
        }
      }
    }
    .col {
      @include flex-grow(1);
      @include flex-basis(0);
      max-width: 100%;
    }
    .start {
      @include justify-content(flex-start);
      text-align: left;
    }

    .center {
      @include justify-content(center);
      text-align: center;
    }

    .end {
      @include justify-content(flex-end);
      text-align: right;
    }

    .top {
      @include align-items(flex-start);
    }

    .middle {
      @include align-items(center);
    }

    .bottom {
      @include align-items(flex-end);
    }

    .around {
      @include justify-content(space-around);
    }

    .between {
      @include justify-content(space-between);
    }

    .first {
      order: -1;
    }

    .last {
      order: 1;
    }
  }
}
